apiVersion: v1
kind: Namespace
metadata:
  name: hops-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: configmaps-reader
  namespace: hops-system
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: configmaps-reader-binding
  namespace: hops-system
subjects:
- kind: ServiceAccount
  name: default
  apiGroup: ""
roleRef:
  kind: Role
  name: configmaps-reader
  apiGroup: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hops-system--hopsworks
  namespace: hops-system
data:
  hopsworksAPI: |-
    {
        "host": "<%= @hopsworks_fqdn %>",
        "port": "<%= @hopsworks_port %>"
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hops-system--serving
  namespace: hops-system
data:
  storageInitializer: |-
    {
        "image": "<%= node['kube-hops']['docker_img_reg_url'] %>/<%= node['kube-hops']['storage-initializer']['image'] %>",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi"
    }
  authenticator: |-
    {
        "allowedProjectUserRoles": [ "Data owner", "Data scientist" ],
        "allowedUserRoles": [ "HOPS_ADMIN", "HOPS_USER" ]
    }
  predictor: |-
    {
        "terminationGracePeriodSeconds": 3
    }
  transformer: |-
    {
        "terminationGracePeriodSeconds": 3
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hops-system--logging
  namespace: hops-system
data:
  kafka: |-
    {
        "brokers": "<%= @kafka_brokers %>"
    }
  inferenceLogger: |-
    {
        "image": "<%= node['kube-hops']['docker_img_reg_url'] %>/<%= node['kube-hops']['inference-logger']['image'] %>",
        "cpuRequest": "0.1",
        "cpuLimit": "1",
        "memoryRequest": "128Mi",
        "memoryLimit": "1Gi"
    }